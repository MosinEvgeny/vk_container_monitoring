version: "3.8"
services:
  db:
    image: postgres:17-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      APP_PORT: ${APP_PORT}
      PING_INTERVAL: ${PING_INTERVAL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      VITE_BACKEND_URL: http://backend:8080
    depends_on:
      - backend
    networks:
      - app-network

  pinger:
    build: ./pinger
    environment:
      BACKEND_URL: http://backend:8080
      PING_INTERVAL: ${PING_INTERVAL}
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge